{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 provider "aws" \{\
  region = "$\{var.region\}"\
\}\
\
data "aws_ami" "ubuntu" \{\
  most_recent = true\
\
  filter \{\
    name   = "name"\
    values = ["$\{var.ami_name_value\}"]\
  \}\
\
  filter \{\
    name   = "virtualization-type"\
    values = ["$\{var.ami_virtualization_type\}"]\
  \}\
\
  filter \{\
    name = "owner-alias"\
\
    values = [\
      "amazon",\
    ]\
  \}\
\}\
\
resource "aws_security_group" "allow_all" \{\
  count       = "$\{var.iscreate == "" ? 1 : 0\}"\
  name        = "allow_all"\
  description = "Allow all inbound traffic"\
  vpc_id      = "$\{var.vpc_id\}"\
\
  ingress \{\
    from_port   = 0\
    to_port     = 0\
    protocol    = "-1"\
    cidr_blocks = ["0.0.0.0/0"]\
  \}\
\
  egress \{\
    from_port       = 0\
    to_port         = 0\
    protocol        = "-1"\
    cidr_blocks     = ["0.0.0.0/0"]\
    prefix_list_ids = ["pl-12c4e678"]\
  \}\
\}\
\
resource "aws_instance" "web" \{\
  ami                    = "$\{data.aws_ami.ubuntu.id\}"\
  instance_type          = "$\{var.instance_type\}"\
  key_name               = "$\{var.keyname\}"\
  vpc_security_group_ids = "$\{var.sg_id == "" ? aws_security_group.allow_all.id : var.sg_id\}"\
\
  tags = \{\
    Name = "$\{var.tag\}"\
  \}\
\}}